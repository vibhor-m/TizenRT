/****************************************************************************
 *
 * Copyright 2018 Samsung Electronics All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific
 * language governing permissions and limitations under the License.
 *
 ****************************************************************************/

#include "BufferInputDataSource.h"
#include <stdio.h>
#include <string.h>
#include <media/MediaTypes.h>

int i;

unsigned char array[192] = { 0x00,0x00,0x00,0x00,0x7A,0x01,0x7A,0x01,0xEE,0x02,0xEE,0x02,0x53,0x04,0x53,0x04,0xA7,0x05,0xA7,0x05,0xE3,0x06,0xE3,0x06,0xFF,0x07,0xFF,0x07,0xF9,0x08,0xF9,0x08,0xCB,0x09,0xCB,0x09,0x73,0x0A,0x73,0x0A,0xED,0x0A,0xED,0x0A,0x37,0x0B,0x37,0x0B,0x50,0x0B,0x50,0x0B,0x37,0x0B,0x37,0x0B,0xED,0x0A,0xED,0x0A,0x74,0x0A,0x74,0x0A,0xCC,0x09,0xCC,0x09,0xF9,0x08,0xF9,0x08,0x00,0x08,0x00,0x08,0xE3,0x06,0xE3,0x06,0xA8,0x05,0xA8,0x05,0x55,0x04,0x55,0x04,0xEE,0x02,0xEE,0x02,0x7A,0x01,0x7A,0x01,0x01,0x00,0x01,0x00,0x86,0xFE,0x86,0xFE,0x12,0xFD,0x12,0xFD,0xAD,0xFB,0xAD,0xFB,0x59,0xFA,0x59,0xFA,0x1D,0xF9,0x1D,0xF9,0x01,0xF8,0x01,0xF8,0x07,0xF7,0x07,0xF7,0x35,0xF6,0x35,0xF6,0x8D,0xF5,0x8D,0xF5,0x13,0xF5,0x13,0xF5,0xC9,0xF4,0xC9,0xF4,0xB0,0xF4,0xB0,0xF4,0xC9,0xF4,0xC9,0xF4,0x13,0xF5,0x13,0xF5,0x8C,0xF5,0x8C,0xF5,0x34,0xF6,0x34,0xF6,0x07,0xF7,0x07,0xF7,0x00,0xF8,0x00,0xF8,0x1D,0xF9,0x1D,0xF9,0x58,0xFA,0x58,0xFA,0xAB,0xFB,0xAB,0xFB,0x12,0xFD,0x12,0xFD,0x86,0xFE,0x86,0xFE};

BufferInputDataSource::BufferInputDataSource()
	: mFp(nullptr)
	, mSrcBuf(nullptr)
	, mSrcSize(0)
{
	i = 0;
}

bool BufferInputDataSource::isPrepared()
{
	return mSrcSize;
}

bool BufferInputDataSource::open()
{
	if (!isPrepared()) {
		mSrcSize = sizeof(array);
	}
	return isPrepared();
}

bool BufferInputDataSource::close()
{
	return OK;
}

ssize_t BufferInputDataSource::read(unsigned char *buf, size_t size)
{
	//simple memset will also work
	//memset(buf, 1, size);
		
	for (int j = 0; j < size; j++) {
		if (i >= 192) i = 0;
		buf[j] = array[i];
		i++;
	}
	return size;
}
